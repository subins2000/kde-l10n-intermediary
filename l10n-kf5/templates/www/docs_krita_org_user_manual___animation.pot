# SOME DESCRIPTIVE TITLE.
# Copyright (C) licensed under the GNU Free Documentation License 1.3+ unless stated otherwise
# This file is distributed under the same license as the Krita Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Krita Manual 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-02 03:06+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../<rst_epilog>:2
msgid ".. image:: images/icons/Krita_mouse_left.png\n"
"   :alt: mouseleft"
msgstr ""

#: ../../<rst_epilog>:4
msgid ".. image:: images/icons/Krita_mouse_right.png\n"
"   :alt: mouseright"
msgstr ""

#: ../../user_manual/animation.rst:1
msgid "Detailed guide on the animation workflow in Krita."
msgstr ""

#: ../../user_manual/animation.rst:13
msgid "Animation"
msgstr ""

#: ../../user_manual/animation.rst:18
msgid "Animation with Krita"
msgstr ""

#: ../../user_manual/animation.rst:20
msgid "Thanks to the 2015 Kickstarter, :program:`Krita 3.0` now has animation. In specific, :program:`Krita` has frame-by-frame raster animation. There's still a lot of elements missing from it, like tweening, but the basic workflow is there."
msgstr ""

#: ../../user_manual/animation.rst:25
msgid "To access the animation features, the easiest way is to change your workspace to Animation. This will make the animation dockers and workflow appear."
msgstr ""

#: ../../user_manual/animation.rst:30
msgid "Animation curves"
msgstr ""

#: ../../user_manual/animation.rst:32
msgid "To create an animation curve (currently only for opacity) expand the :guilabel:`New Frame` button in the :guilabel:`Animation` dock and click :guilabel:`Add Opacity Keyframe`. You can now edit the keyframed value for opacity directly in the “Layers” dock, adding more keyframes will by default fade from the last to the next upcoming keyframe in the timeline over the frames between them. See :ref:`animation curves <animation_curves_docker>` for details."
msgstr ""

#: ../../user_manual/animation.rst:40
msgid "Workflow"
msgstr ""

#: ../../user_manual/animation.rst:42
msgid "In traditional animation workflow, what you do is that you make *key frames*, which contain the important poses, and then draw frames in between (\\ *tweening* in highly sophisticated animator's jargon)."
msgstr ""

#: ../../user_manual/animation.rst:46
msgid "For this workflow, there are three important dockers:"
msgstr ""

#: ../../user_manual/animation.rst:48
msgid "The :ref:`timeline_docker`. View and control all of the frames in your animation. The timeline docker also contains functions to manage your layers. The layer that are created in the timeline docker also appear on the normal Layer docker."
msgstr ""

#: ../../user_manual/animation.rst:52
msgid "The :ref:`animation_docker`. This docker contains the play buttons as the ability to change the frame-rate, playback speed and useful little options like :guilabel:`auto-key framing`."
msgstr ""

#: ../../user_manual/animation.rst:55
msgid "The :ref:`onion_skin_docker`. This docker controls the look of the onion skin, which in turn is useful for seeing the previous frame."
msgstr ""

#: ../../user_manual/animation.rst:60
msgid "Introduction to animation: How to make a walkcycle"
msgstr ""

#: ../../user_manual/animation.rst:62
msgid "The best way to get to understand all these different parts is to actually use them. Walk cycles are considered the most basic form of a full animation, because of all the different parts involved with them. Therefore, going over how one makes a walkcycle should serve as a good introduction."
msgstr ""

#: ../../user_manual/animation.rst:69
msgid "Setup"
msgstr ""

#: ../../user_manual/animation.rst:71
msgid "First, we make a new file:"
msgstr ""

#: ../../user_manual/animation.rst:74
msgid ".. image:: images/animation/Introduction_to_animation_01.png"
msgstr ""

#: ../../user_manual/animation.rst:75
msgid "On the first tab, we type in a nice ratio like 1280x1024, set the dpi to 72 (we're making this for screens after all) and title the document 'walkcycle'."
msgstr ""

#: ../../user_manual/animation.rst:79
msgid "In the second tab, we choose a nice background color, and set the background to canvas-color. This means that Krita will automatically fill in any transparent bits with the background color. You can change this in :menuselection:`Image --> Image Properties`. This seems to be most useful to people doing animation, as the layer you do animation on MUST be semi-transparent to get onion skinning working."
msgstr ""

#: ../../user_manual/animation.rst:82
msgid "Krita has a bunch of functionality for meta-data, starting at the :guilabel:`Create Document` screen. The title will be automatically used as a suggestion for saving and the description can be used by databases, or for you to leave comments behind. Not many people use it individually, but it can be useful for working in larger groups."
msgstr ""

#: ../../user_manual/animation.rst:84
msgid "Then hit :guilabel:`Create`!"
msgstr ""

#: ../../user_manual/animation.rst:86
msgid "Then, to get all the necessary tools for animation, select the workspace switcher:"
msgstr ""

#: ../../user_manual/animation.rst:91
msgid ".. image:: images/animation/Introduction_to_animation_02.png"
msgstr ""

#: ../../user_manual/animation.rst:91
msgid "The red arrow points at the workspace switcher."
msgstr ""

#: ../../user_manual/animation.rst:93
msgid "And select the animation workspace."
msgstr ""

#: ../../user_manual/animation.rst:95
msgid "Which should result in this:"
msgstr ""

#: ../../user_manual/animation.rst:98
msgid ".. image:: images/animation/Introduction_to_animation_03.png"
msgstr ""

#: ../../user_manual/animation.rst:99
msgid "The animation workspace adds the timeline, animation and onion skin dockers at the bottom."
msgstr ""

#: ../../user_manual/animation.rst:103
msgid "Animating"
msgstr ""

#: ../../user_manual/animation.rst:105
msgid "We have two transparent layers set up. Let's name the bottom one 'environment' and the top 'walkcycle' by double clicking their names in the layer docker."
msgstr ""

#: ../../user_manual/animation.rst:110
msgid ".. image:: images/animation/Introduction_to_animation_04.png"
msgstr ""

#: ../../user_manual/animation.rst:111
msgid "Use the straight line tool to draw a single horizontal line. This is the ground."
msgstr ""

#: ../../user_manual/animation.rst:115
msgid ".. image:: images/animation/Introduction_to_animation_05.png"
msgstr ""

#: ../../user_manual/animation.rst:116
msgid "Then, select the 'walkcycle' layer and draw a head and torso (you can use any brush for this)."
msgstr ""

#: ../../user_manual/animation.rst:118
msgid "Now, selecting a new frame will not make a new frame automatically. Krita doesn't actually see the 'walkcycle' layer as an animated layer at all!"
msgstr ""

#: ../../user_manual/animation.rst:123
msgid ".. image:: images/animation/Introduction_to_animation_06.png"
msgstr ""

#: ../../user_manual/animation.rst:124
msgid "We can make it animatable by adding a frame to the timeline. |mouseright| a frame in the timeline to get a context menu. Choose :guilabel:`New Frame`."
msgstr ""

#: ../../user_manual/animation.rst:128
msgid ".. image:: images/animation/Introduction_to_animation_07.png"
msgstr ""

#: ../../user_manual/animation.rst:129
msgid "You can see it has become an animated layer because of the onion skin icon showing up in the timeline docker."
msgstr ""

#: ../../user_manual/animation.rst:133
msgid ".. image:: images/animation/Introduction_to_animation_08.png"
msgstr ""

#: ../../user_manual/animation.rst:134
msgid "Use the :guilabel:`Copy Frame` button to copy the first frame onto the second. Then, use the with the :kbd:`Shift + ↑` shortcut to move the frame contents up."
msgstr ""

#: ../../user_manual/animation.rst:137
msgid "We can see the difference by turning on the onionskinning:"
msgstr ""

#: ../../user_manual/animation.rst:140
msgid ".. image:: images/animation/Introduction_to_animation_09.png"
msgstr ""

#: ../../user_manual/animation.rst:141
msgid "Now, you should see the previous frame as red."
msgstr ""

#: ../../user_manual/animation.rst:144
msgid "Krita sees white as a color, not as transparent, so make sure the animation layer you are working on is transparent in the bits where there's no drawing. You can fix the situation by use the :ref:`filter_color_to_alpha` filter, but prevention is best."
msgstr ""

#: ../../user_manual/animation.rst:147
msgid ".. image:: images/animation/Introduction_to_animation_10.png"
msgstr ""

#: ../../user_manual/animation.rst:148
msgid "Future frames are drawn in green, and both colors can be configured in the onion skin docker."
msgstr ""

#: ../../user_manual/animation.rst:152
msgid ".. image:: images/animation/Introduction_to_animation_11.png"
msgstr ""

#: ../../user_manual/animation.rst:153
msgid "Now, we're gonna draw the two extremes of the walkcycle. These are the pose where both legs are as far apart as possible, and the pose where one leg is full stretched and the other pulled in, ready to take the next step."
msgstr ""

#: ../../user_manual/animation.rst:158
msgid "Now, let's copy these two... We could do that with the :kbd:`Ctrl + drag` shortcut, but here comes a tricky bit:"
msgstr ""

#: ../../user_manual/animation.rst:162
msgid ".. image:: images/animation/Introduction_to_animation_12.png"
msgstr ""

#: ../../user_manual/animation.rst:163
msgid ":kbd:`Ctrl +` |mouseleft| also selects and deselects frames, so to copy..."
msgstr ""

#: ../../user_manual/animation.rst:165
msgid ":kbd:`Ctrl +` |mouseleft| to select all the frames you want to select."
msgstr ""

#: ../../user_manual/animation.rst:166
msgid ":kbd:`Ctrl + drag`. You need to make sure the first frame is 'orange', otherwise it won't be copied along."
msgstr ""

#: ../../user_manual/animation.rst:169
msgid "Now then..."
msgstr ""

#: ../../user_manual/animation.rst:174
msgid ".. image:: images/animation/Introduction_to_animation_13.png"
msgstr ""

#: ../../user_manual/animation.rst:174
msgid "squashed the timeline docker a bit to save space"
msgstr ""

#: ../../user_manual/animation.rst:176
msgid "Copy frame 0 to frame 2."
msgstr ""

#: ../../user_manual/animation.rst:177
msgid "Copy frame 1 to frame 3."
msgstr ""

#: ../../user_manual/animation.rst:178
msgid "In the animation docker, set the frame-rate to 4."
msgstr ""

#: ../../user_manual/animation.rst:179
msgid "Select all frames in the timeline docker by dragging-selecting them."
msgstr ""

#: ../../user_manual/animation.rst:180
msgid "Press play in the animation docker."
msgstr ""

#: ../../user_manual/animation.rst:181
msgid "Enjoy your first animation!"
msgstr ""

#: ../../user_manual/animation.rst:184
msgid "Expanding upon your rough walkcycle"
msgstr ""

#: ../../user_manual/animation.rst:187
msgid ".. image:: images/animation/Introduction_to_animation_14.png"
msgstr ""

#: ../../user_manual/animation.rst:188
msgid "You can quickly make some space by the :kbd:`Alt + drag` shortcut on any frame. This'll move that frame and all others after it in one go."
msgstr ""

#: ../../user_manual/animation.rst:191
msgid "Then draw inbetweens on each frame that you add."
msgstr ""

#: ../../user_manual/animation.rst:194
msgid ".. image:: images/animation/Introduction_to_animation_16.png"
msgstr ""

#: ../../user_manual/animation.rst:195
msgid "You'll find that the more frames you add, the more difficult it becomes to keep track of the onion skins."
msgstr ""

#: ../../user_manual/animation.rst:197
msgid "You can modify the onion skin by using the onion skin docker, where you can change how many frames are visible at once, by toggling them on the top row. The bottom row is for controlling transparency, while below there you can modify the colors and extremity of the coloring."
msgstr ""

#: ../../user_manual/animation.rst:203
msgid ".. image:: images/animation/Introduction_to_animation_15.png"
msgstr ""

#: ../../user_manual/animation.rst:205
msgid "Animating with multiple layers"
msgstr ""

#: ../../user_manual/animation.rst:207
msgid "Okay, our walkcycle is missing some hands, let's add them on a separate layer. So we make a new layer, and name it hands and..."
msgstr ""

#: ../../user_manual/animation.rst:211
msgid ".. image:: images/animation/Introduction_to_animation_17.png"
msgstr ""

#: ../../user_manual/animation.rst:212
msgid "Our walkcycle is gone from the timeline docker! This is a feature actually. A full animation can have so many little parts that an animator might want to remove the layers they're not working on from the timeline docker. So you manually have to add them."
msgstr ""

#: ../../user_manual/animation.rst:218
msgid ".. image:: images/animation/Introduction_to_animation_18.png"
msgstr ""

#: ../../user_manual/animation.rst:219
msgid "You can show any given layer in the timeline by doing |mouseright| on the layer in the layer docker, and toggling :guilabel:`Show in Timeline`."
msgstr ""

#: ../../user_manual/animation.rst:223
msgid ".. image:: images/animation/Introduction_to_animation_19.png"
msgstr ""

#: ../../user_manual/animation.rst:225
msgid "Exporting"
msgstr ""

#: ../../user_manual/animation.rst:227
msgid "When you are done, select :menuselection:`File --> Render Animation`."
msgstr ""

#: ../../user_manual/animation.rst:230
msgid ".. image:: images/animation/Introduction_to_animation_20.png"
msgstr ""

#: ../../user_manual/animation.rst:231
msgid "It's recommended to save out your file as a png, and preferably in its own folder. Krita can currently only export png sequences."
msgstr ""

#: ../../user_manual/animation.rst:235
msgid ".. image:: images/animation/Introduction_to_animation_21.png"
msgstr ""

#: ../../user_manual/animation.rst:236
msgid "When pressing done, you can see the status of the export in the status bar below."
msgstr ""

#: ../../user_manual/animation.rst:240
msgid ".. image:: images/animation/Introduction_to_animation_22.png"
msgstr ""

#: ../../user_manual/animation.rst:241
msgid "The images should be saved out as filenameXXX.png, giving their frame number."
msgstr ""

#: ../../user_manual/animation.rst:244
msgid "Then use something like Gimp (Linux, OSX, Windows), ImageMagick (Linux, OSX, Windows), or any other gif creator to make a gif out of your image sequence:"
msgstr ""

#: ../../user_manual/animation.rst:249
msgid ".. image:: images/animation/Introduction_to_animation_walkcycle_02.gif"
msgstr ""

#: ../../user_manual/animation.rst:250
msgid "For example, you can use `VirtualDub <http://www.virtualdub.org/>`_\\ (Windows) and open all the frames and then go to :menuselection:`File --> Export --> GIF`."
msgstr ""

#: ../../user_manual/animation.rst:254
msgid "Enjoy your walkcycle!"
msgstr ""

#: ../../user_manual/animation.rst:258
msgid "Krita 3.1 has a render animation feature. If you're using the 3.1 beta, check out the :ref:`render_animation` page for more information!"
msgstr ""

#: ../../user_manual/animation.rst:261
msgid "Importing animation frames"
msgstr ""

#: ../../user_manual/animation.rst:263
msgid "You can import animation frames in Krita 3.0."
msgstr ""

#: ../../user_manual/animation.rst:265
msgid "First let us take a sprite sheet from Open Game Art. (This is the Libre Pixel Cup male walkcycle)"
msgstr ""

#: ../../user_manual/animation.rst:268
msgid "And we'll use :menuselection:`Image --> Split Image` to split up the sprite sheet."
msgstr ""

#: ../../user_manual/animation.rst:271
msgid ".. image:: images/animation/Animation_split_spritesheet.png"
msgstr ""

#: ../../user_manual/animation.rst:272
msgid "The slices are even, so for a sprite sheet of 9 sprites, use 8 vertical slices and 0 horizontal slices. Give it a proper name and save it as png."
msgstr ""

#: ../../user_manual/animation.rst:274
msgid "Then, make a new canvas, and select :menuselection:`File --> Import Animation Frames`. This will give you a little window. Select :guilabel:`Add images`. This should get you a file browser where you can select your images."
msgstr ""

#: ../../user_manual/animation.rst:277
msgid ".. image:: images/animation/Animation_import_sprites.png"
msgstr ""

#: ../../user_manual/animation.rst:278
msgid "You can select multiple images at once."
msgstr ""

#: ../../user_manual/animation.rst:281
msgid ".. image:: images/animation/Animation_set_everything.png"
msgstr ""

#: ../../user_manual/animation.rst:282
msgid "The frames are currently automatically ordered. You can set the ordering with the top-left two drop-down boxes."
msgstr ""

#: ../../user_manual/animation.rst:285
msgid "Start"
msgstr ""

#: ../../user_manual/animation.rst:286
msgid "Indicates at which point the animation should be imported."
msgstr ""

#: ../../user_manual/animation.rst:288
msgid "Indicates the difference between the imported animation and the document frame rate. This animation is 8 frames big, and the fps of the document is 24 frames, so there should be a step of 3 to keep it even. As you can see, the window gives feedback on how much fps the imported animation would be with the currently given step."
msgstr ""

#: ../../user_manual/animation.rst:292
msgid "Step"
msgstr ""

#: ../../user_manual/animation.rst:294
msgid "Press :guilabel:`OK`, and your animation should be imported as a new layer."
msgstr ""

#: ../../user_manual/animation.rst:297
msgid ".. image:: images/animation/Animation_import_done.png"
msgstr ""

#: ../../user_manual/animation.rst:299
msgid "Reference"
msgstr ""

#: ../../user_manual/animation.rst:301
msgid "https://community.kde.org/Krita/Docs/AnimationGuiFeaturesList"
msgstr ""

#: ../../user_manual/animation.rst:302
msgid "`The source for the libre pixel cup male walkmediawiki cycle <https://opengameart.org/content/liberated-pixel-cup-lpc-base-assets-sprites-map-tiles>`_"
msgstr ""
