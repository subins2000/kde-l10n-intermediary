# SOME DESCRIPTIVE TITLE.
# Copyright (C) licensed under the GNU Free Documentation License 1.3+ unless stated otherwise
# This file is distributed under the same license as the Krita Manual package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Krita Manual 4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-08-02 03:06+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../<rst_epilog>:1
msgid ".. image:: images/assistants/Assistants_fish-eye_2_02.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:2
msgid "How to use the painting assistants in Krita to draw perspectives."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:12
msgid "Painting Assistants"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:17
msgid "Painting with Assistants"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:19
msgid "The assistant system allows you to have a little help while drawing straight lines or circles."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:22
msgid "They can function as a preview shape, or you can snap onto them with the freehand brush tool. In the tool options of free hand brush, you can toggle :guilabel:`Snap to Assistants` to turn on snapping."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:30
msgid ".. image:: images/assistants/Krita_basic_assistants.png\n"
"   :alt: Krita's vanishing point assistants in action"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:30
msgid "Krita's vanishing point assistants in action"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:32
msgid "The following assistants are available in Krita:"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:35
msgid "Types"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:37
msgid "There are several types in Krita. You can select a type of assistant via the tool options docker."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:43
msgid "Ellipse"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:45
msgid "An assistant for drawing ellipses and circles."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:47
msgid "This assistant consists of three points: the first two are the axis of the ellipse, and the last one is to determine its width."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:51
msgid "The same an ellipse, but allows for making ellipses that are concentric to each other."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:52
msgid "Concentric Ellipse"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:54
#: ../../user_manual/painting_with_assistants.rst:144
msgid "If you press the :kbd:`Shift` key while holding the first two handles, they will snap to perfectly horizontal or vertical lines. Press the :kbd:`Shift` key while holding the third handle, and it'll snap to a perfect circle."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:61
#: ../../user_manual/painting_with_assistants.rst:154
msgid "Perspective"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:63
msgid "This ruler takes four points and creates a perspective grid."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:65
msgid "This grid can be used with the 'perspective' sensor, which can influence brushes."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:68
msgid "If you press the :kbd:`Shift` key while holding any of the corner handles, they'll snap to one of the other corner handles, in sets."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:74
#: ../../user_manual/painting_with_assistants.rst:78
msgid "Ruler"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:76
msgid "There are three assistants in this group:"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:79
msgid "Helps create a straight line between two points."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:81
msgid "Infinite Ruler"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:81
msgid "Extrapolates a straight line beyond the two visible points on the canvas."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:84
msgid "This ruler allows you to draw a line parallel to the line between the two points anywhere on the canvas."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:85
msgid "Parallel Ruler"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:87
msgid "If you press the :kbd:`Shift` key while holding the first two handles, they will snap to perfectly horizontal or vertical lines."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:93
msgid "Spline"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:95
msgid "This assistant allows you to position and adjust four points to create a cubic bezier curve. You can then draw along the curve, snapping your brush stroke directly to the curve line. Perfect curves every time!"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:99
msgid "If you press the :kbd:`Shift` key while holding the first two handles, they will snap to perfectly horizontal or vertical lines. Press the :kbd:`Shift` key while holding the third or fourth handle, they will snap relative to the handle they are attached to."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:107
msgid "Vanishing Point"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:109
msgid "This assistant allows you to create a vanishing point, typically used for a horizon line. A preview line is drawn and all your snapped lines are drawn to this line."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:112
msgid "It is one point, with four helper points to align it to previously created perspective lines."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:115
msgid "They are made and manipulated with the :ref:`assistant_tool`."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:117
msgid "If you press the :kbd:`Shift` key while holding the center handle, they will snap to perfectly horizontal or vertical lines depending on the position of where it previously was."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:123
msgid "The vanishing point assistant also shows several general lines."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:125
msgid "When you've just created, or when you've just moved a vanishing point assistant, it will be selected. This means you can modify the amount of lines shown in the tool options of the :ref:`assistant_tool`."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:130
msgid "Fish Eye Point"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:132
msgid "Like the vanishing point assistant, this assistant is per a set of parallel lines in a 3d space. So to use it effectively, use two, where the second is at a 90 degrees angle of the first, and add a vanishing point to the center of both. Or combine one with a parallel ruler and a vanishing point, or even one with two vanishing points. The possibilities are quite large."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:139
msgid "This assistant will not just give feedback/snapping between the vanishing points, but also give feedback to the relative left and right of the assistant. This is so you can use it in edge-cases like panoramas with relative ease."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:149
msgid "Tutorials"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:151
msgid "Check out this in depth discussion and tutorial on https://www.youtube.com/watch?v=OhEv2pw3EuI"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:154
msgid "Technical Drawing"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:157
msgid "Setting up Krita for technical drawing-like perspectives"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:159
msgid "So now that you've seen the wide range of drawing assistants that Krita offers, here is an example of how using these assistants you can set up Krita for technical drawing."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:163
msgid "This tutorial below should give you an idea of how to set up the assistants for specific types of technical views."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:166
msgid "If you want to instead do the true projection, check out :ref:`the projection category <cat_projection>`."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:169
msgid "Orthographic"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:171
msgid "Orthographic is a mode where you try to look at something from the left or the front. Typically, you try to keep everything in exact scale with each other, unlike perspective deformation."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:175
msgid "The key assistant you want to use here is the Parallel Ruler. You can set these up horizontally or vertically, so you always have access to a Grid."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:180
msgid "Axonometric"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:182
msgid "All of these are set up using three Parallel Rulers."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:185
msgid ".. image:: images/assistants/Assistants_oblique.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:187
msgid "For oblique, set two parallel rulers to horizontal and vertical, and one to an angle, representing depth."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:188
msgid "Oblique"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:191
msgid ".. image:: images/assistants/Assistants_dimetric.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:193
msgid "Isometric perspective has technically all three rulers set up at 120° from each other. Except when it's game isometric, then it's a type of dimetric projection where the diagonal values are a 116.565° from the main. The latter can be easily set up by snapping the assistants to a grid."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:197
msgid "Dimetric & Isometric"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:200
msgid ".. image:: images/assistants/Assistants_trimetric.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:202
msgid "Is when all the angles are slightly different. Often looks like a slightly angled isometric."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:203
msgid "Trimetric"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:206
msgid "Linear Perspective"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:209
msgid ".. image:: images/assistants/Assistants_1_point_perspective.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:211
msgid "A 1 point perspective is set up using 1 vanishing point, and two crossing perpendicular parallel rulers."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:212
msgid "1 Point Perspective"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:215
msgid ".. image:: images/assistants/Assistants_2_point_perspective.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:217
msgid "A 2 point perspective is set up using 2 vanishing point and 1 vertical parallel ruler. Often, putting the vanishing points outside the frame a little can decrease the strength of it."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:219
msgid "2 Point Perspective"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:222
msgid ".. image:: images/assistants/Assistants_2_pointperspective_02.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:224
msgid ".. image:: images/assistants/Assistants_3_point_perspective.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:226
msgid "3 Point Perspective"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:226
msgid "A 3 point perspective is set up using 3 vanishing point rulers."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:229
msgid "Logic of the vanishing point"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:231
msgid "There's a little secret that perspective tutorials don't always tell you, and that's that a vanishing point is the point where any two parallel lines meet. This means that a 1 point perspective and 2 point perspective are virtually the same."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:233
msgid "We can prove this via a little experiment. That good old problem: drawing a rail-road."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:236
msgid ".. image:: images/assistants/Assistants_vanishing_point_logic_01.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:237
msgid "You are probably familiar with the problem: How to determine where the next beam is going to be, as perspective projection will make them look closer together."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:240
msgid "Typically, the solution is to draw a line in the middle and then draw lines diagonally across. After all, those lines are parallel, meaning that the exact same distance is used."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:243
msgid ".. image:: images/assistants/Assistants_vanishing_point_logic_02.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:244
msgid "But because they are parallel, we can use a vanishing point assistant instead, and we use the alignment handles to align it to the diagonal of the beam, and to the horizontal (here marked with red)."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:247
msgid "That diagonal can then in turn be used to determine the position of the beams:"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:251
msgid ".. image:: images/assistants/Assistants_vanishing_point_logic_03.png"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:252
msgid "Because any given set of lines has a vanishing point (outside of the ones flat on the view-plane), there can be an infinite amount of vanishing points in a linear perspective. Therefore, Krita allows you to set vanishing points yourself instead of forcing you to only use a few."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:255
msgid "Fish Eye perspective"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:257
msgid "Fish eye perspective works much the same as the linear perspective, the big difference being that in a fish-eye perspective, any parallel set of lines has two vanishing points, each for one side."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:261
msgid "So, to set them up, the easiest way is one horizontal, one vertical, on the same spot, and one vanishing point assistant in the middle."
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:265
msgid ".. image:: images/assistants/Fish-eye.gif"
msgstr ""

#: ../../user_manual/painting_with_assistants.rst:266
msgid "But, you can also make one horizontal one that is just as big as the other horizontal one, and put it halfway:"
msgstr ""
